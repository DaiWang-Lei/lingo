import React, { useEffect, useState } from "react";
import GlobalIcon from "./icons/GlobalIcon";
import LocalIcon from "./icons/LocalIcon";
import ScreenSpaceIcon from "./icons/ScreenSpaceIcon";
import WorldSpaceIcon from "./icons/WorldSpaceIcon";
import { setTransformControlsMode } from "lingo3d/lib/states/useTransformControlsMode";
import { setTransformControlsSpace } from "lingo3d/lib/states/useTransformControlsSpace";
import { setOrbitControlsScreenSpacePanning } from "lingo3d/lib/states/useOrbitControlsScreenSpacePanning";
import IconButton from "./IconButton";
import TranslateIcon from "./icons/TranslateIcon";
import RotateIcon from "./icons/RotateIcon";
import ScaleIcon from "./icons/ScaleIcon";
import { useCamera, useCameraList } from "../hooks";
const Toolbar = () => {
    const [mode, setMode] = useState("translate");
    const [space, setSpace] = useState("local");
    const [screenSpacePanning, setScreenSpacePanning] = useState(false);
    const [camera] = useCamera();
    const [cameraList] = useCameraList();
    const isMainCamera = camera === cameraList[0];
    useEffect(() => {
        setTransformControlsMode(mode);
    }, [mode]);
    useEffect(() => {
        setTransformControlsSpace(space);
    }, [space]);
    useEffect(() => {
        setOrbitControlsScreenSpacePanning(screenSpacePanning);
    }, [screenSpacePanning]);
    return (React.createElement("div", { style: { display: "flex", paddingTop: 10, paddingBottom: 10 } },
        React.createElement("div", { style: { display: "flex", gap: 10, paddingLeft: 10, paddingRight: 10, borderRight: "1px solid #444444" } },
            React.createElement(IconButton, { onClick: () => setMode("translate"), active: mode === "translate" },
                React.createElement(TranslateIcon, null)),
            React.createElement(IconButton, { onClick: () => setMode("rotate"), active: mode === "rotate" },
                React.createElement(RotateIcon, null)),
            React.createElement(IconButton, { onClick: () => setMode("scale"), active: mode === "scale" },
                React.createElement(ScaleIcon, null))),
        React.createElement("div", { style: { display: "flex", gap: 10, paddingLeft: 10, paddingRight: 10, borderRight: "1px solid #444444" } },
            React.createElement(IconButton, { onClick: () => setSpace("local"), active: mode !== "scale" && space === "local" },
                React.createElement(LocalIcon, null)),
            React.createElement(IconButton, { onClick: () => setSpace("world"), active: mode !== "scale" && space === "world" },
                React.createElement(GlobalIcon, null))),
        React.createElement("div", { style: { display: "flex", gap: 10, paddingLeft: 10, paddingRight: 10, borderRight: "1px solid #444444" } },
            React.createElement(IconButton, { onClick: () => setScreenSpacePanning(false), active: isMainCamera && !screenSpacePanning },
                React.createElement(WorldSpaceIcon, null)),
            React.createElement(IconButton, { onClick: () => setScreenSpacePanning(true), active: isMainCamera && screenSpacePanning },
                React.createElement(ScreenSpaceIcon, null)))));
};
export default Toolbar;
