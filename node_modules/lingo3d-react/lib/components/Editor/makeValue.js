import { isMultipleSelectionGroup, toFixed } from "./utils";
export default (t, propName, defaultValue, folder, options) => {
    var _a;
    let value;
    if (isMultipleSelectionGroup(t)) {
        const first = t.outerObject3d.children[0][propName];
        if (t.outerObject3d.children.every((child) => child[propName] === first))
            value = first !== null && first !== void 0 ? first : defaultValue;
        else
            value = defaultValue;
    }
    else
        value = (_a = t[propName]) !== null && _a !== void 0 ? _a : defaultValue;
    (options === null || options === void 0 ? void 0 : options.format) && (value = options.format(value));
    typeof value === "number" && (value = toFixed(value));
    return [value, {
            ...options,
            folder,
            onChange: (e) => {
                t[propName] = e.value;
            }
        }];
};
