import { CircleBufferGeometry } from "three";
import Primitive from "../core/Primitive";
import { flatGeomScaleZ, radiusScaled } from "../../engine/constants";
import circleShape from "../core/SimpleObjectManager/PhysicsItem/cannon/shapes/circleShape";
import { primitiveDefaults } from "../../interface/IPrimitive";
export const circleGeometry = new CircleBufferGeometry(radiusScaled, 32);
export default class Circle extends Primitive {
    constructor() {
        super(circleGeometry, true);
        this._physicsShape = circleShape;
        this.object3d.scale.z = flatGeomScaleZ;
    }
}
Circle.componentName = "circle";
Circle.defaults = primitiveDefaults;
